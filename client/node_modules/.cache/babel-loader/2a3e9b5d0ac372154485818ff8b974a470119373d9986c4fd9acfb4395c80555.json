{"ast":null,"code":"var _jsxFileName = \"/Users/smohiuddin/Temp Mail/client/src/contexts/EmailContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect, useCallback } from 'react';\nimport { useSocket } from './SocketContext';\nimport { toast } from 'react-hot-toast';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailContext = /*#__PURE__*/createContext();\nconst initialState = {\n  currentEmailAddress: null,\n  emails: [],\n  loading: false,\n  error: null,\n  metadata: null,\n  selectedEmail: null\n};\nconst emailReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    case 'SET_EMAIL_ADDRESS':\n      return {\n        ...state,\n        currentEmailAddress: action.payload,\n        emails: [],\n        selectedEmail: null,\n        metadata: null\n      };\n    case 'SET_EMAILS':\n      return {\n        ...state,\n        emails: action.payload.emails,\n        metadata: action.payload.metadata,\n        loading: false,\n        error: null\n      };\n    case 'ADD_EMAIL':\n      return {\n        ...state,\n        emails: [action.payload, ...state.emails],\n        metadata: state.metadata ? {\n          ...state.metadata,\n          emailCount: state.metadata.emailCount + 1\n        } : null\n      };\n    case 'UPDATE_EMAIL':\n      return {\n        ...state,\n        emails: state.emails.map(email => email.id === action.payload.id ? {\n          ...email,\n          ...action.payload\n        } : email)\n      };\n    case 'DELETE_EMAIL':\n      return {\n        ...state,\n        emails: state.emails.filter(email => email.id !== action.payload),\n        metadata: state.metadata ? {\n          ...state.metadata,\n          emailCount: Math.max(0, state.metadata.emailCount - 1)\n        } : null\n      };\n    case 'SET_SELECTED_EMAIL':\n      return {\n        ...state,\n        selectedEmail: action.payload\n      };\n    case 'CLEAR_EMAILS':\n      return {\n        ...state,\n        emails: [],\n        selectedEmail: null,\n        metadata: null\n      };\n    default:\n      return state;\n  }\n};\nexport const EmailProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(emailReducer, initialState);\n  const {\n    socket\n  } = useSocket();\n\n  // Listen for new emails via WebSocket\n  useEffect(() => {\n    if (!socket || !state.currentEmailAddress) return;\n    socket.emit('join-email-room', state.currentEmailAddress);\n    socket.on('new-email', email => {\n      dispatch({\n        type: 'ADD_EMAIL',\n        payload: email\n      });\n      toast.success(`New email received: ${email.subject}`);\n    });\n    return () => {\n      socket.emit('leave-email-room', state.currentEmailAddress);\n      socket.off('new-email');\n    };\n  }, [socket, state.currentEmailAddress]);\n\n  // Generate new email address\n  const generateEmailAddress = useCallback(async (pattern = null) => {\n    try {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: true\n      });\n      const response = await axios.post('/api/addresses/generate', {\n        pattern\n      });\n      const {\n        emailAddress\n      } = response.data;\n      dispatch({\n        type: 'SET_EMAIL_ADDRESS',\n        payload: emailAddress\n      });\n      toast.success('New email address generated!');\n      return emailAddress;\n    } catch (error) {\n      console.error('Error generating email address:', error);\n      dispatch({\n        type: 'SET_ERROR',\n        payload: 'Failed to generate email address'\n      });\n      toast.error('Failed to generate email address');\n      throw error;\n    }\n  }, []);\n\n  // Fetch emails for current address\n  const fetchEmails = useCallback(async (emailAddress = state.currentEmailAddress) => {\n    if (!emailAddress) return;\n    try {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: true\n      });\n      const response = await axios.get(`/api/emails/${emailAddress}`);\n      const {\n        emails,\n        metadata\n      } = response.data;\n      dispatch({\n        type: 'SET_EMAILS',\n        payload: {\n          emails,\n          metadata\n        }\n      });\n    } catch (error) {\n      console.error('Error fetching emails:', error);\n      dispatch({\n        type: 'SET_ERROR',\n        payload: 'Failed to fetch emails'\n      });\n      toast.error('Failed to fetch emails');\n    }\n  }, [state.currentEmailAddress]);\n\n  // Fetch specific email\n  const fetchEmail = useCallback(async emailId => {\n    if (!state.currentEmailAddress) return;\n    try {\n      const response = await axios.get(`/api/emails/${state.currentEmailAddress}/${emailId}`);\n      dispatch({\n        type: 'SET_SELECTED_EMAIL',\n        payload: response.data\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching email:', error);\n      toast.error('Failed to fetch email');\n      throw error;\n    }\n  }, [state.currentEmailAddress]);\n\n  // Mark email as read\n  const markEmailAsRead = async emailId => {\n    if (!state.currentEmailAddress) return;\n    try {\n      await axios.patch(`/api/emails/${state.currentEmailAddress}/${emailId}/read`);\n      dispatch({\n        type: 'UPDATE_EMAIL',\n        payload: {\n          id: emailId,\n          read: true\n        }\n      });\n    } catch (error) {\n      console.error('Error marking email as read:', error);\n    }\n  };\n\n  // Delete email\n  const deleteEmail = async emailId => {\n    if (!state.currentEmailAddress) return;\n    try {\n      await axios.delete(`/api/emails/${state.currentEmailAddress}/${emailId}`);\n      dispatch({\n        type: 'DELETE_EMAIL',\n        payload: emailId\n      });\n      toast.success('Email deleted successfully');\n    } catch (error) {\n      console.error('Error deleting email:', error);\n      toast.error('Failed to delete email');\n    }\n  };\n\n  // Search emails\n  const searchEmails = async query => {\n    if (!state.currentEmailAddress || !query) return [];\n    try {\n      const response = await axios.get(`/api/emails/${state.currentEmailAddress}/search?q=${encodeURIComponent(query)}`);\n      return response.data.results;\n    } catch (error) {\n      console.error('Error searching emails:', error);\n      toast.error('Failed to search emails');\n      return [];\n    }\n  };\n\n  // Export emails\n  const exportEmails = async (format = 'json') => {\n    if (!state.currentEmailAddress) return;\n    try {\n      const response = await axios.get(`/api/emails/${state.currentEmailAddress}/export?format=${format}`, {\n        responseType: 'blob'\n      });\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', `${state.currentEmailAddress}-emails.${format}`);\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n      window.URL.revokeObjectURL(url);\n      toast.success(`Emails exported successfully as ${format.toUpperCase()}`);\n    } catch (error) {\n      console.error('Error exporting emails:', error);\n      toast.error('Failed to export emails');\n    }\n  };\n\n  // Extend email address expiration\n  const extendEmailAddress = async (hours = 24) => {\n    if (!state.currentEmailAddress) return;\n    try {\n      const response = await axios.patch(`/api/addresses/${state.currentEmailAddress}/extend`, {\n        hours\n      });\n      toast.success(`Email address expiration extended by ${hours} hours`);\n      return response.data.newExpiresAt;\n    } catch (error) {\n      console.error('Error extending email address:', error);\n      toast.error('Failed to extend email address expiration');\n    }\n  };\n\n  // Clear current email data\n  const clearEmails = () => {\n    dispatch({\n      type: 'CLEAR_EMAILS'\n    });\n  };\n  const value = {\n    ...state,\n    generateEmailAddress,\n    fetchEmails,\n    fetchEmail,\n    markEmailAsRead,\n    deleteEmail,\n    searchEmails,\n    exportEmails,\n    extendEmailAddress,\n    clearEmails\n  };\n  return /*#__PURE__*/_jsxDEV(EmailContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 5\n  }, this);\n};\n_s(EmailProvider, \"1I+UCo14gb55o4pYe09r+hxxkJc=\", false, function () {\n  return [useSocket];\n});\n_c = EmailProvider;\nexport const useEmail = () => {\n  _s2();\n  const context = useContext(EmailContext);\n  if (!context) {\n    throw new Error('useEmail must be used within an EmailProvider');\n  }\n  return context;\n};\n_s2(useEmail, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"EmailProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","useCallback","useSocket","toast","axios","jsxDEV","_jsxDEV","EmailContext","initialState","currentEmailAddress","emails","loading","error","metadata","selectedEmail","emailReducer","state","action","type","payload","emailCount","map","email","id","filter","Math","max","EmailProvider","children","_s","dispatch","socket","emit","on","success","subject","off","generateEmailAddress","pattern","response","post","emailAddress","data","console","fetchEmails","get","fetchEmail","emailId","markEmailAsRead","patch","read","deleteEmail","delete","searchEmails","query","encodeURIComponent","results","exportEmails","format","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","remove","revokeObjectURL","toUpperCase","extendEmailAddress","hours","newExpiresAt","clearEmails","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useEmail","_s2","context","Error","$RefreshReg$"],"sources":["/Users/smohiuddin/Temp Mail/client/src/contexts/EmailContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect, useCallback } from 'react';\nimport { useSocket } from './SocketContext';\nimport { toast } from 'react-hot-toast';\nimport axios from 'axios';\n\nconst EmailContext = createContext();\n\nconst initialState = {\n  currentEmailAddress: null,\n  emails: [],\n  loading: false,\n  error: null,\n  metadata: null,\n  selectedEmail: null\n};\n\nconst emailReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return { ...state, loading: action.payload };\n    \n    case 'SET_ERROR':\n      return { ...state, error: action.payload, loading: false };\n    \n    case 'SET_EMAIL_ADDRESS':\n      return { \n        ...state, \n        currentEmailAddress: action.payload,\n        emails: [],\n        selectedEmail: null,\n        metadata: null\n      };\n    \n    case 'SET_EMAILS':\n      return { \n        ...state, \n        emails: action.payload.emails,\n        metadata: action.payload.metadata,\n        loading: false,\n        error: null\n      };\n    \n    case 'ADD_EMAIL':\n      return {\n        ...state,\n        emails: [action.payload, ...state.emails],\n        metadata: state.metadata ? {\n          ...state.metadata,\n          emailCount: state.metadata.emailCount + 1\n        } : null\n      };\n    \n    case 'UPDATE_EMAIL':\n      return {\n        ...state,\n        emails: state.emails.map(email => \n          email.id === action.payload.id ? { ...email, ...action.payload } : email\n        )\n      };\n    \n    case 'DELETE_EMAIL':\n      return {\n        ...state,\n        emails: state.emails.filter(email => email.id !== action.payload),\n        metadata: state.metadata ? {\n          ...state.metadata,\n          emailCount: Math.max(0, state.metadata.emailCount - 1)\n        } : null\n      };\n    \n    case 'SET_SELECTED_EMAIL':\n      return { ...state, selectedEmail: action.payload };\n    \n    case 'CLEAR_EMAILS':\n      return { ...state, emails: [], selectedEmail: null, metadata: null };\n    \n    default:\n      return state;\n  }\n};\n\nexport const EmailProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(emailReducer, initialState);\n  const { socket } = useSocket();\n\n  // Listen for new emails via WebSocket\n  useEffect(() => {\n    if (!socket || !state.currentEmailAddress) return;\n\n    socket.emit('join-email-room', state.currentEmailAddress);\n\n    socket.on('new-email', (email) => {\n      dispatch({ type: 'ADD_EMAIL', payload: email });\n      toast.success(`New email received: ${email.subject}`);\n    });\n\n    return () => {\n      socket.emit('leave-email-room', state.currentEmailAddress);\n      socket.off('new-email');\n    };\n  }, [socket, state.currentEmailAddress]);\n\n  // Generate new email address\n  const generateEmailAddress = useCallback(async (pattern = null) => {\n    try {\n      dispatch({ type: 'SET_LOADING', payload: true });\n      \n      const response = await axios.post('/api/addresses/generate', { pattern });\n      const { emailAddress } = response.data;\n      \n      dispatch({ type: 'SET_EMAIL_ADDRESS', payload: emailAddress });\n      toast.success('New email address generated!');\n      \n      return emailAddress;\n    } catch (error) {\n      console.error('Error generating email address:', error);\n      dispatch({ type: 'SET_ERROR', payload: 'Failed to generate email address' });\n      toast.error('Failed to generate email address');\n      throw error;\n    }\n  }, []);\n\n  // Fetch emails for current address\n  const fetchEmails = useCallback(async (emailAddress = state.currentEmailAddress) => {\n    if (!emailAddress) return;\n\n    try {\n      dispatch({ type: 'SET_LOADING', payload: true });\n      \n      const response = await axios.get(`/api/emails/${emailAddress}`);\n      const { emails, metadata } = response.data;\n      \n      dispatch({ type: 'SET_EMAILS', payload: { emails, metadata } });\n    } catch (error) {\n      console.error('Error fetching emails:', error);\n      dispatch({ type: 'SET_ERROR', payload: 'Failed to fetch emails' });\n      toast.error('Failed to fetch emails');\n    }\n  }, [state.currentEmailAddress]);\n\n  // Fetch specific email\n  const fetchEmail = useCallback(async (emailId) => {\n    if (!state.currentEmailAddress) return;\n\n    try {\n      const response = await axios.get(`/api/emails/${state.currentEmailAddress}/${emailId}`);\n      dispatch({ type: 'SET_SELECTED_EMAIL', payload: response.data });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching email:', error);\n      toast.error('Failed to fetch email');\n      throw error;\n    }\n  }, [state.currentEmailAddress]);\n\n  // Mark email as read\n  const markEmailAsRead = async (emailId) => {\n    if (!state.currentEmailAddress) return;\n\n    try {\n      await axios.patch(`/api/emails/${state.currentEmailAddress}/${emailId}/read`);\n      dispatch({ \n        type: 'UPDATE_EMAIL', \n        payload: { id: emailId, read: true } \n      });\n    } catch (error) {\n      console.error('Error marking email as read:', error);\n    }\n  };\n\n  // Delete email\n  const deleteEmail = async (emailId) => {\n    if (!state.currentEmailAddress) return;\n\n    try {\n      await axios.delete(`/api/emails/${state.currentEmailAddress}/${emailId}`);\n      dispatch({ type: 'DELETE_EMAIL', payload: emailId });\n      toast.success('Email deleted successfully');\n    } catch (error) {\n      console.error('Error deleting email:', error);\n      toast.error('Failed to delete email');\n    }\n  };\n\n  // Search emails\n  const searchEmails = async (query) => {\n    if (!state.currentEmailAddress || !query) return [];\n\n    try {\n      const response = await axios.get(`/api/emails/${state.currentEmailAddress}/search?q=${encodeURIComponent(query)}`);\n      return response.data.results;\n    } catch (error) {\n      console.error('Error searching emails:', error);\n      toast.error('Failed to search emails');\n      return [];\n    }\n  };\n\n  // Export emails\n  const exportEmails = async (format = 'json') => {\n    if (!state.currentEmailAddress) return;\n\n    try {\n      const response = await axios.get(`/api/emails/${state.currentEmailAddress}/export?format=${format}`, {\n        responseType: 'blob'\n      });\n      \n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', `${state.currentEmailAddress}-emails.${format}`);\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n      window.URL.revokeObjectURL(url);\n      \n      toast.success(`Emails exported successfully as ${format.toUpperCase()}`);\n    } catch (error) {\n      console.error('Error exporting emails:', error);\n      toast.error('Failed to export emails');\n    }\n  };\n\n  // Extend email address expiration\n  const extendEmailAddress = async (hours = 24) => {\n    if (!state.currentEmailAddress) return;\n\n    try {\n      const response = await axios.patch(`/api/addresses/${state.currentEmailAddress}/extend`, { hours });\n      toast.success(`Email address expiration extended by ${hours} hours`);\n      return response.data.newExpiresAt;\n    } catch (error) {\n      console.error('Error extending email address:', error);\n      toast.error('Failed to extend email address expiration');\n    }\n  };\n\n  // Clear current email data\n  const clearEmails = () => {\n    dispatch({ type: 'CLEAR_EMAILS' });\n  };\n\n  const value = {\n    ...state,\n    generateEmailAddress,\n    fetchEmails,\n    fetchEmail,\n    markEmailAsRead,\n    deleteEmail,\n    searchEmails,\n    exportEmails,\n    extendEmailAddress,\n    clearEmails\n  };\n\n  return (\n    <EmailContext.Provider value={value}>\n      {children}\n    </EmailContext.Provider>\n  );\n};\n\nexport const useEmail = () => {\n  const context = useContext(EmailContext);\n  if (!context) {\n    throw new Error('useEmail must be used within an EmailProvider');\n  }\n  return context;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}