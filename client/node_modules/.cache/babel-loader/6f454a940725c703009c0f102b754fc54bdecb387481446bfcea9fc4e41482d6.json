{"ast":null,"code":"var _jsxFileName = \"/Users/smohiuddin/Temp Mail/client/src/contexts/SocketContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nexport const SocketProvider = ({\n  children\n}) => {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  useEffect(() => {\n    // Create socket connection\n    const newSocket = io(process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000', {\n      transports: ['websocket', 'polling'],\n      autoConnect: true,\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000\n    });\n\n    // Connection event handlers\n    newSocket.on('connect', () => {\n      console.log('Connected to server');\n      setIsConnected(true);\n    });\n    newSocket.on('disconnect', () => {\n      console.log('Disconnected from server');\n      setIsConnected(false);\n    });\n    newSocket.on('connect_error', error => {\n      console.error('Connection error:', error);\n      setIsConnected(false);\n    });\n    newSocket.on('reconnect', attemptNumber => {\n      console.log(`Reconnected after ${attemptNumber} attempts`);\n      setIsConnected(true);\n    });\n    newSocket.on('reconnect_error', error => {\n      console.error('Reconnection error:', error);\n    });\n    newSocket.on('reconnect_failed', () => {\n      console.error('Failed to reconnect');\n      setIsConnected(false);\n    });\n    setSocket(newSocket);\n\n    // Cleanup on unmount\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n  const value = {\n    socket,\n    isConnected\n  };\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(SocketProvider, \"QMiDLkz4HTcH977k6GWSjZyAdcs=\");\n_c = SocketProvider;\nexport const useSocket = () => {\n  _s2();\n  const context = useContext(SocketContext);\n  if (!context) {\n    throw new Error('useSocket must be used within a SocketProvider');\n  }\n  return context;\n};\n_s2(useSocket, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","io","jsxDEV","_jsxDEV","SocketContext","SocketProvider","children","_s","socket","setSocket","isConnected","setIsConnected","newSocket","process","env","REACT_APP_SOCKET_URL","transports","autoConnect","reconnection","reconnectionAttempts","reconnectionDelay","on","console","log","error","attemptNumber","close","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useSocket","_s2","context","Error","$RefreshReg$"],"sources":["/Users/smohiuddin/Temp Mail/client/src/contexts/SocketContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\n\nconst SocketContext = createContext();\n\nexport const SocketProvider = ({ children }) => {\n  const [socket, setSocket] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n\n  useEffect(() => {\n    // Create socket connection\n    const newSocket = io(process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000', {\n      transports: ['websocket', 'polling'],\n      autoConnect: true,\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000,\n    });\n\n    // Connection event handlers\n    newSocket.on('connect', () => {\n      console.log('Connected to server');\n      setIsConnected(true);\n    });\n\n    newSocket.on('disconnect', () => {\n      console.log('Disconnected from server');\n      setIsConnected(false);\n    });\n\n    newSocket.on('connect_error', (error) => {\n      console.error('Connection error:', error);\n      setIsConnected(false);\n    });\n\n    newSocket.on('reconnect', (attemptNumber) => {\n      console.log(`Reconnected after ${attemptNumber} attempts`);\n      setIsConnected(true);\n    });\n\n    newSocket.on('reconnect_error', (error) => {\n      console.error('Reconnection error:', error);\n    });\n\n    newSocket.on('reconnect_failed', () => {\n      console.error('Failed to reconnect');\n      setIsConnected(false);\n    });\n\n    setSocket(newSocket);\n\n    // Cleanup on unmount\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n\n  const value = {\n    socket,\n    isConnected,\n  };\n\n  return (\n    <SocketContext.Provider value={value}>\n      {children}\n    </SocketContext.Provider>\n  );\n};\n\nexport const useSocket = () => {\n  const context = useContext(SocketContext);\n  if (!context) {\n    throw new Error('useSocket must be used within a SocketProvider');\n  }\n  return context;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}